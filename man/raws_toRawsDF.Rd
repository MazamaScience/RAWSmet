% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/raws_toRawsDF.R
\name{raws_toRawsDF}
\alias{raws_toRawsDF}
\title{Convert a raws_timeseries object to a rawsDF object}
\usage{
raws_toRawsDF(rawsObject = NULL, sizeMax = 100)
}
\arguments{
\item{rawsObject}{\emph{raws_timeseries} object to convert.}

\item{sizeMax}{Maximum allowable size (in MB) for the resulting dataframe.}
}
\value{
Tidy dataframe containing data and metadata.
}
\description{
Converts a \emph{raws_timeseries} object to a single, tidy
dataframe containing all varaibles from \code{rawsObject$data} along with the 
following values from \code{rawsObject$meta}:

\enumerate{
 \item{nwsID - the nwsID of the station}
 \item{wrccID - the wrccID of the station}
 \item{siteName - the name of the station}
 \item{longitude - longitude coordinate of the station}
 \item{latitude - latitude coordinate of the station}
 \item{elevation - elevation of the station}
}

This version of the RAWS data is known as a \emph{rawsDF} object.

Replicating this set of variables for every record greatly inflates the size
of the data but also makes it much more useful when working with the 
\pkg{dplyr} and \code{ggplot2} packages.

Multiple \emph{rawsDF} objects can be combined with \code{dplyr::bind_rows()} 
and used to create multi-station plots.
}
\examples{
\dontrun{
library(RAWSmet)

setRawsDataDir("~/Data/RAWS/")

stationMeta <- wrcc_loadMeta(stateCode = "WA")
rawsObject <- wrcc_loadYear(
  wrccID = "waWENU", 
  meta = stationMeta, 
  year = 2020,
  password = MY_PASSWORD
)

rawsDF <- raws_toRawsDF(rawsObject)

dplyr::glimpse(rawsDF)
}

}
\references{
\href{https://cefa.dri.edu/raws/}{Program for Climate, Ecosystem and Fire Applications}
}
